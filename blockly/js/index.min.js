"use strict";var EOutput,EArgType,ToolBoxKind,ha;(function(t){t.Boolean="Boolean",t.Number="Number",t.String="String",t.Array="Array"})(EOutput||(EOutput={})),function(t){t.inputValue="input_value"}(EArgType||(EArgType={})),function(t){t.categoryToolbox="categoryToolbox",t.category="category",t.block="block"}(ToolBoxKind||(ToolBoxKind={})),function(t){(function(t){(function(t){function e(t){console.log("test: "+t.type),javascript.javascriptGenerator.forBlock[t.type]=function(e,o){let l="";return l=t.systemName+"(",t.args0.forEach((n,a)=>{let i=o.valueToCode(e,n.name,javascript.Order.ATOMIC);console.log("value to code >>","item name:",n.name,"value",i),l+=i,a<t.args0.length-1&&(l+=",")}),l+=");\n",console.log("code",l),l}}function o(){l.push({type:"blitz_graphics",systemName:"Graphics123",message0:"Graphics123 ( %1 , %2 , %3, %4)",args0:[{type:EArgType.inputValue,name:"width",check:EOutput.Number,default:"320"},{type:EArgType.inputValue,name:"height",check:EOutput.Number,default:"240"},{type:EArgType.inputValue,name:"fullScreen",check:EOutput.Boolean,default:"true"},{type:EArgType.inputValue,name:"handleInput",check:EOutput.Boolean,default:"true"}],inputsInline:!0,previousStatement:null,nextStatement:null,colour:230,tooltip:"",helpUrl:"",inputs:{width:{shadow:{type:"math_number",fields:{NUM:240}}},height:{shadow:{type:"math_number",fields:{NUM:320}}},fullScreen:{shadow:{type:"logic_boolean",fields:{BOOL:"TRUE"}}},handleInput:{shadow:{type:"logic_boolean",fields:{BOOL:"TRUE"}}}}}),l.push({type:"blitz_muat_sprite",message0:"Load Sprite from %1",systemName:"Muat",inputsInline:!0,previousStatement:null,nextStatement:null,colour:230,args0:[{check:EOutput.String,name:"url",output:EOutput.Number,type:EArgType.inputValue}]}),Blockly.common.defineBlocksWithJsonArray(l);let e={kind:"category",name:"Blitz",contents:[]};l.forEach(t=>{let o={name:t.systemName,kind:ToolBoxKind.block,type:t.type};t.inputs&&(o.inputs=t.inputs),e.contents.push(o)}),t.toolbox.contents.push(e);for(let t=0;t<l.length;t++){let e=l[t];console.log("type: "+e.type),javascript.javascriptGenerator.forBlock[e.type]=((t,o)=>{let l="";return console.group(""),l=e.systemName+"(",e.args0.forEach((n,a)=>{let i=o.valueToCode(t,n.name,javascript.Order.ATOMIC);console.log("value to code >>","item name:",n.name,"value",i),l+=i,a<e.args0.length-1&&(l+=",")}),l+=");\n",console.log("code",l),console.groupEnd(),l})}}t.ToolBoxCreateJSDef=e,t.init=o;let l=[];t.toolbox={kind:ToolBoxKind.categoryToolbox,contents:[{kind:ToolBoxKind.category,name:"Logic",contents:[{kind:"block",type:"controls_if"},{kind:"block",type:"logic_compare"},{kind:"block",type:"logic_operation"},{kind:"block",type:"logic_negate"},{kind:"block",type:"logic_boolean"},{kind:"block",type:"logic_null"},{kind:"block",type:"logic_ternary"}]},{kind:"category",name:"Loops",contents:[{kind:"block",type:"controls_repeat_ext"},{kind:"block",type:"controls_whileUntil"},{kind:"block",type:"controls_for"},{kind:"block",type:"controls_forEach"},{kind:"block",type:"controls_flow_statements"}]},{kind:"category",name:"Math",contents:[{kind:"block",type:"math_number"},{kind:"block",type:"math_arithmetic"},{kind:"block",type:"math_single"},{kind:"block",type:"math_trig"},{kind:"block",type:"math_constant"},{kind:"block",type:"math_number_property"},{kind:"block",type:"math_round"},{kind:"block",type:"math_on_list"},{kind:"block",type:"math_modulo"},{kind:"block",type:"math_constrain"},{kind:"block",type:"math_random_int"},{kind:"block",type:"math_random_float"}]},{kind:"category",name:"Text",contents:[{kind:"block",type:"text"},{kind:"block",type:"text_join"},{kind:"block",type:"text_append"},{kind:"block",type:"text_length"},{kind:"block",type:"text_isEmpty"},{kind:"block",type:"text_indexOf"},{kind:"block",type:"text_charAt"},{kind:"block",type:"text_getSubstring"},{kind:"block",type:"text_changeCase"},{kind:"block",type:"text_trim"},{kind:"block",type:"text_print"},{kind:"block",type:"text_prompt_ext"}]},{kind:"category",name:"Lists",contents:[{kind:"block",type:"lists_create_with"},{kind:"block",type:"lists_repeat"},{kind:"block",type:"lists_length"},{kind:"block",type:"lists_isEmpty"},{kind:"block",type:"lists_indexOf"},{kind:"block",type:"lists_getIndex"},{kind:"block",type:"lists_setIndex"},{kind:"block",type:"lists_getSublist"},{kind:"block",type:"lists_split"},{kind:"block",type:"lists_sort"}]},{kind:"category",name:"Variables",custom:"VARIABLE"},{kind:"category",name:"Functions",custom:"PROCEDURE"}]}})(t.toolbox||(t.toolbox={}))})(t.blockly||(t.blockly={}))}(ha||(ha={})),ha.blockly.toolbox.init();var options={toolbox:ha.blockly.toolbox.toolbox,collapse:!0,comments:!0,disable:!0,maxBlocks:1/0,trashcan:!0,horizontalLayout:!1,toolboxPosition:"start",css:!0,media:"https://blockly-demo.appspot.com/static/media/",rtl:!1,scrollbars:!0,sounds:!0,oneBasedIndex:!0};const workspace=Blockly.inject("blocklyDiv",options);let w=window;w.test=(()=>{let t=Blockly.serialization.workspaces.save(workspace);window.localStorage.setItem("blocklytest",JSON.stringify(t)),console.log(t)}),w.load=(()=>{let t=window.localStorage.getItem("blocklytest"),e=JSON.parse(t);Blockly.serialization.workspaces.load(e,workspace)}),w.code=(()=>{let t=javascript.javascriptGenerator.workspaceToCode(workspace);console.log(t)}),w.tambahVar=(()=>{let t=prompt("variable baru"),e=Blockly.serialization.workspaces.save(workspace);e.variables||(e.variables=[]),e.variables.push({id:"random_id"+Math.floor(1e3*Math.random()),name:t}),Blockly.serialization.workspaces.load(e,workspace)}),window.onload=(()=>{});